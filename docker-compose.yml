services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: weight-tracker-mongodb
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_INITDB}
    command: mongod --auth
    restart: unless-stopped
    networks:
      - weight-tracker-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${API_NODE_ENV}
        - PORT=${API_PORT}
        - MONGODB_URI=${MONGODB_URI}
        - CORS_ORIGIN=${API_CORS_ORIGIN}
    container_name: weight-tracker-backend
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./backend/uploads:/app/uploads
    environment:
      - NODE_ENV=${API_NODE_ENV}
      - PORT=${API_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - CORS_ORIGIN=${API_CORS_ORIGIN}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - weight-tracker-network

  # Frontend web application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_API_ENDPOINT=${API_ENDPOINT}
        - VITE_API_TARGET=${VITE_API_TARGET}
    container_name: weight-tracker-frontend
    ports:
      - "${UI_PORT}:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - weight-tracker-network

networks:
  weight-tracker-network:
    driver: bridge

volumes:
  mongodb_data: